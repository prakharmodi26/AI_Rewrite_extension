{
  "version": 3,
  "sources": ["../../extension/src/storage.ts", "../../extension/src/popup.ts"],
  "sourcesContent": ["import { Settings, Tone, HistoryItem } from './types.js';\n\nconst DEFAULTS = {\n  serverUrl: 'http://localhost:8080',\n  defaultTone: 'friendly' as Tone,\n  redact: false,\n  dismissOnOutsideClick: true,\n};\n\nasync function ensureInstallId(): Promise<string> {\n  const { installId } = await chrome.storage.local.get('installId');\n  if (installId && typeof installId === 'string') return installId;\n  const id = crypto.randomUUID();\n  await chrome.storage.local.set({ installId: id });\n  return id;\n}\n\nexport async function getSettings(): Promise<Settings> {\n  const sync = await chrome.storage.sync.get(['serverUrl', 'defaultTone', 'redact', 'dismissOnOutsideClick']);\n  const local = await chrome.storage.local.get(['secret', 'installId']);\n  const installId = local.installId || (await ensureInstallId());\n  const allowedTones: Tone[] = ['friendly', 'formal', 'confident', 'persuasive', 'casual'];\n  const rawTone = (sync.defaultTone as string) || '';\n  const safeTone: Tone = allowedTones.includes(rawTone as Tone) ? (rawTone as Tone) : DEFAULTS.defaultTone;\n  return {\n    serverUrl: sync.serverUrl || DEFAULTS.serverUrl,\n    defaultTone: safeTone,\n    redact: typeof sync.redact === 'boolean' ? sync.redact : DEFAULTS.redact,\n    dismissOnOutsideClick: typeof sync.dismissOnOutsideClick === 'boolean' ? sync.dismissOnOutsideClick : DEFAULTS.dismissOnOutsideClick,\n    secret: typeof local.secret === 'string' ? local.secret : undefined,\n    installId,\n  };\n}\n\nexport async function setSyncSettings(partial: Partial<Pick<Settings, 'serverUrl' | 'defaultTone' | 'redact' | 'dismissOnOutsideClick'>>): Promise<void> {\n  await chrome.storage.sync.set(partial);\n}\n\nexport async function setLocalSettings(partial: Partial<Pick<Settings, 'secret' | 'installId'>>): Promise<void> {\n  await chrome.storage.local.set(partial);\n}\n\nexport async function regenerateInstallId(): Promise<string> {\n  const id = crypto.randomUUID();\n  await chrome.storage.local.set({ installId: id });\n  return id;\n}\n\nexport async function getHistory(): Promise<HistoryItem[]> {\n  const { history } = await chrome.storage.local.get('history');\n  if (Array.isArray(history)) return history as HistoryItem[];\n  return [];\n}\n\nexport async function addHistoryItem(item: Omit<HistoryItem, 'id' | 'ts'> & Partial<Pick<HistoryItem, 'id' | 'ts'>>): Promise<void> {\n  const current = await getHistory();\n  const full: HistoryItem = {\n    id: item.id || crypto.randomUUID(),\n    ts: item.ts || Date.now(),\n    task: item.task,\n    output: item.output,\n    inputPreview: item.inputPreview,\n    tone: item.tone,\n    percent: item.percent,\n    summary_level: item.summary_level,\n  };\n  const updated = [full, ...current].slice(0, 10);\n  await chrome.storage.local.set({ history: updated });\n}\n", "import { getHistory } from './storage.js';\n\nfunction fmtDate(ts: number) {\n  const d = new Date(ts);\n  return d.toLocaleString();\n}\n\nfunction renderMeta(item: any) {\n  const parts: string[] = [item.task];\n  if (item.tone) parts.push(`tone: ${item.tone}`);\n  if (item.percent) parts.push(`${item.percent}%`);\n  if (item.summary_level) parts.push(`summary: ${item.summary_level}`);\n  return parts.join(' \u00B7 ');\n}\n\nasync function init() {\n  const list = document.getElementById('list') as HTMLDivElement;\n  const btn = document.getElementById('openOptions') as HTMLButtonElement;\n  btn.addEventListener('click', () => {\n    chrome.runtime.openOptionsPage();\n  });\n\n  const items = await getHistory();\n  if (!items.length) {\n    const empty = document.createElement('div');\n    empty.className = 'empty';\n    empty.textContent = 'No history yet. Select text, then right-click \u2192 AI Actions to generate your first result.';\n    list.appendChild(empty);\n    return;\n  }\n\n  for (const item of items) {\n    const card = document.createElement('div');\n    card.className = 'item';\n\n    const meta = document.createElement('div');\n    meta.className = 'meta';\n    meta.textContent = `${renderMeta(item)} \u00B7 ${fmtDate(item.ts)}`;\n\n    const output = document.createElement('div');\n    output.className = 'output';\n    output.textContent = item.output;\n\n    const actions = document.createElement('div');\n    actions.className = 'actions';\n    const copyBtn = document.createElement('button');\n    copyBtn.className = 'btn';\n    copyBtn.textContent = 'Copy';\n    copyBtn.addEventListener('click', async () => {\n      await navigator.clipboard.writeText(item.output);\n      copyBtn.textContent = 'Copied!';\n      setTimeout(() => (copyBtn.textContent = 'Copy'), 1200);\n    });\n\n    actions.append(copyBtn);\n    card.append(meta, output, actions);\n    list.appendChild(card);\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', init);\n"],
  "mappings": ";AAgDA,eAAsB,aAAqC;AACzD,QAAM,EAAE,QAAQ,IAAI,MAAM,OAAO,QAAQ,MAAM,IAAI,SAAS;AAC5D,MAAI,MAAM,QAAQ,OAAO,EAAG,QAAO;AACnC,SAAO,CAAC;AACV;;;AClDA,SAAS,QAAQ,IAAY;AAC3B,QAAM,IAAI,IAAI,KAAK,EAAE;AACrB,SAAO,EAAE,eAAe;AAC1B;AAEA,SAAS,WAAW,MAAW;AAC7B,QAAM,QAAkB,CAAC,KAAK,IAAI;AAClC,MAAI,KAAK,KAAM,OAAM,KAAK,SAAS,KAAK,IAAI,EAAE;AAC9C,MAAI,KAAK,QAAS,OAAM,KAAK,GAAG,KAAK,OAAO,GAAG;AAC/C,MAAI,KAAK,cAAe,OAAM,KAAK,YAAY,KAAK,aAAa,EAAE;AACnE,SAAO,MAAM,KAAK,QAAK;AACzB;AAEA,eAAe,OAAO;AACpB,QAAM,OAAO,SAAS,eAAe,MAAM;AAC3C,QAAM,MAAM,SAAS,eAAe,aAAa;AACjD,MAAI,iBAAiB,SAAS,MAAM;AAClC,WAAO,QAAQ,gBAAgB;AAAA,EACjC,CAAC;AAED,QAAM,QAAQ,MAAM,WAAW;AAC/B,MAAI,CAAC,MAAM,QAAQ;AACjB,UAAM,QAAQ,SAAS,cAAc,KAAK;AAC1C,UAAM,YAAY;AAClB,UAAM,cAAc;AACpB,SAAK,YAAY,KAAK;AACtB;AAAA,EACF;AAEA,aAAW,QAAQ,OAAO;AACxB,UAAM,OAAO,SAAS,cAAc,KAAK;AACzC,SAAK,YAAY;AAEjB,UAAM,OAAO,SAAS,cAAc,KAAK;AACzC,SAAK,YAAY;AACjB,SAAK,cAAc,GAAG,WAAW,IAAI,CAAC,SAAM,QAAQ,KAAK,EAAE,CAAC;AAE5D,UAAM,SAAS,SAAS,cAAc,KAAK;AAC3C,WAAO,YAAY;AACnB,WAAO,cAAc,KAAK;AAE1B,UAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,YAAQ,YAAY;AACpB,UAAM,UAAU,SAAS,cAAc,QAAQ;AAC/C,YAAQ,YAAY;AACpB,YAAQ,cAAc;AACtB,YAAQ,iBAAiB,SAAS,YAAY;AAC5C,YAAM,UAAU,UAAU,UAAU,KAAK,MAAM;AAC/C,cAAQ,cAAc;AACtB,iBAAW,MAAO,QAAQ,cAAc,QAAS,IAAI;AAAA,IACvD,CAAC;AAED,YAAQ,OAAO,OAAO;AACtB,SAAK,OAAO,MAAM,QAAQ,OAAO;AACjC,SAAK,YAAY,IAAI;AAAA,EACvB;AACF;AAEA,SAAS,iBAAiB,oBAAoB,IAAI;",
  "names": []
}
